import { GridLocaleText } from '@mui/x-data-grid';
export const localText_en: Partial<GridLocaleText> = {
	noRowsLabel: '', // string;
	noResultsOverlayLabel: '', // string;
	toolbarDensity: '', // React.ReactNode;
	toolbarDensityLabel: '', // string;
	toolbarDensityCompact: '', // string;
	toolbarDensityStandard: '', // string;
	toolbarDensityComfortable: '', // string;
	toolbarColumns: '', // React.ReactNode;
	toolbarColumnsLabel: '', // string;
	toolbarFilters: '', // React.ReactNode;
	toolbarFiltersLabel: '', // string;
	toolbarFiltersTooltipHide: '', // React.ReactNode;
	toolbarFiltersTooltipShow: '', // React.ReactNode;
	toolbarFiltersTooltipActive: (count) => {
		return count;
	}, // (count: number) => React.ReactNode;
	toolbarQuickFilterPlaceholder: '', // string;
	toolbarQuickFilterLabel: '', // string;
	toolbarQuickFilterDeleteIconLabel: '', // string;
	toolbarExport: '', // React.ReactNode;
	toolbarExportLabel: '', // string;
	toolbarExportCSV: '', // React.ReactNode;
	toolbarExportPrint: '', // React.ReactNode;
	toolbarExportExcel: '', // string;
	columnsPanelTextFieldLabel: '', // string;
	columnsPanelTextFieldPlaceholder: '', // string;
	columnsPanelDragIconLabel: '', // string;
	columnsPanelShowAllButton: '', // React.ReactNode;
	columnsPanelHideAllButton: '', // React.ReactNode;
	filterPanelAddFilter: '', // React.ReactNode;
	filterPanelRemoveAll: '', // React.ReactNode;
	filterPanelDeleteIconLabel: '', // string;
	filterPanelLogicOperator: '', // string;
	filterPanelOperator: '', // React.ReactNode;
	filterPanelOperatorAnd: '', // React.ReactNode;
	filterPanelOperatorOr: '', // React.ReactNode;
	filterPanelColumns: '', // React.ReactNode;
	filterPanelInputLabel: '', // string;
	filterPanelInputPlaceholder: '', // string;
	filterOperatorContains: '', // string;
	filterOperatorEquals: '', // string;
	filterOperatorStartsWith: '', // string;
	filterOperatorEndsWith: '', // string;
	filterOperatorIs: '', // string;
	filterOperatorNot: '', // string;
	filterOperatorAfter: '', // string;
	filterOperatorOnOrAfter: '', // string;
	filterOperatorBefore: '', // string;
	filterOperatorOnOrBefore: '', // string;
	filterOperatorIsEmpty: '', // string;
	filterOperatorIsNotEmpty: '', // string;
	filterOperatorIsAnyOf: '', // string;
	'filterOperator=': '', //string;
	'filterOperator!=': '', // string;
	'filterOperator>': '', //string;
	'filterOperator>=': '', // string;
	'filterOperator<': '', //string;
	'filterOperator<=': '', // string;
	headerFilterOperatorContains: '', // string;
	headerFilterOperatorEquals: '', // string;
	headerFilterOperatorStartsWith: '', // string;
	headerFilterOperatorEndsWith: '', // string;
	headerFilterOperatorIs: '', // string;
	headerFilterOperatorNot: '', // string;
	headerFilterOperatorAfter: '', // string;
	headerFilterOperatorOnOrAfter: '', // string;
	headerFilterOperatorBefore: '', // string;
	headerFilterOperatorOnOrBefore: '', // string;
	headerFilterOperatorIsEmpty: '', // string;
	headerFilterOperatorIsNotEmpty: '', // string;
	headerFilterOperatorIsAnyOf: '', // string;
	'headerFilterOperator=': '', //: string;
	'headerFilterOperator!=': '', //': string;
	'headerFilterOperator>': '', //: string;
	'headerFilterOperator>=': '', //: string;
	'headerFilterOperator<': '', //: string;
	'headerFilterOperator<=': '', //': string;
	filterValueAny: '', // string;
	filterValueTrue: '', // string;
	filterValueFalse: '', // string;
	columnMenuLabel: '', // string;
	columnMenuShowColumns: '', // React.ReactNode;
	columnMenuManageColumns: '', // React.ReactNode;
	columnMenuFilter: '', // React.ReactNode;
	columnMenuHideColumn: '', // React.ReactNode;
	columnMenuUnsort: '', // React.ReactNode;
	columnMenuSortAsc: '', // React.ReactNode;
	columnMenuSortDesc: '', // React.ReactNode;
	columnHeaderFiltersTooltipActive: (count) => {
		return count;
	}, // (count: number) => React.ReactNode;
	columnHeaderFiltersLabel: '', // string;
	columnHeaderSortIconLabel: '', // string;
	footerRowSelected: (count) => {
		return count;
	}, // (count: number) => React.ReactNode;
	footerTotalRows: '', // React.ReactNode;
	footerTotalVisibleRows: (visibleCount: number, totalCount: number) => {
		return '';
	}, // (visibleCount: number, totalCount: number) => React.ReactNode;
	checkboxSelectionHeaderName: '', // string;
	checkboxSelectionSelectAllRows: '', // string;
	checkboxSelectionUnselectAllRows: '', // string;
	checkboxSelectionSelectRow: '', // string;
	checkboxSelectionUnselectRow: '', // string;
	booleanCellTrueLabel: '', // string;
	booleanCellFalseLabel: '', // string;
	actionsCellMore: '', // string;
	pinToLeft: '', // string;
	pinToRight: '', // string;
	unpin: '', // string;
	treeDataGroupingHeaderName: '', // string;
	treeDataExpand: '', // string;
	treeDataCollapse: '', // string;
	groupingColumnHeaderName: '', // string;
	groupColumn: (name) => {
		return name;
	}, // (name: string) => string;
	unGroupColumn: (name) => {
		return name;
	}, // (name: string) => string;
	detailPanelToggle: '', // string;
	expandDetailPanel: '', // string;
	collapseDetailPanel: '', // string;
	rowReorderingHeaderName: '', // string;
	aggregationMenuItemHeader: '', // string;
	aggregationFunctionLabelSum: '', // string;
	aggregationFunctionLabelAvg: '', // string;
	aggregationFunctionLabelMin: '', // string;
	aggregationFunctionLabelMax: '', // string;
	aggregationFunctionLabelSize: '', // string;
	MuiTablePagination: {
		// Omit<ComponentsPropsList['MuiTablePagination'], 'page' | 'count' | 'onChangePage' | 'rowsPerPage' | 'onPageChange'>;
		labelRowsPerPage: '',
		labelDisplayedRows(paginationInfo) {
			return '';
		},
	},
};
